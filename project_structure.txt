──────────────────────────────────────────────────────────────────────────────
        🔶 PROJECT ARCHITECTURE DIAGRAM (최종 서버 구조 및 통신 흐름)
──────────────────────────────────────────────────────────────────────────────

                           🌐 Internet / Clients
                           ─────────────────────
         (1) Frontend (Web / App)
             • 사용자 UI (HTTPS)
             • API 요청 시 API_KEY 포함
             • 응답(JSON) 수신
                    │
                    │ (A) HTTPS (TLS)
                    ▼

┌────────────────────────────────────────────────────────────────────────────┐
│                           Render Platform (Cloud)                          │
│      ─────────────────────────────────────────────────────────────────     │
│  Components: FastAPI App + Redis Cache + PostgreSQL (DB) (All integrated)  │
└────────────────────────────────────────────────────────────────────────────┘
        │
        │
        ├────────────────────────────────────────────────────────────────────┐
        │                                                                    │
        │                                                                    │
        ▼                                                                    ▼
┌──────────────────────────────┐                        ┌──────────────────────────────┐
│          FastAPI App         │                        │      External Monitoring     │
│          (Backend API)       │                        │         (UptimeRobot)        │
│ ──────────────────────────── │                        │ ──────────────────────────── │
│  • /api/*   : API endpoint   │◄───────────Ping (HEAD) │  • 5분 간격 ping (/health)     │
│  • /docs    : 로그인 필요.      │───────────────────────►│  • 서버 suspend 방지           │
│  • /health  : Health check   │                        │                              │
│  • Alembic 실행 지원            │                        └──────────────────────────────┘
│  • API_KEY 검증 (프론트만 접근 가능)│
│  • Redis 캐시와 DB 연결 관리      │
└──────────┬──────────────────┘
           │
           │ (B) Cache lookup (GET/SET via RESP)
           ▼
   ┌──────────────────────┐
   │     Redis Cache      │
   │  - 자주 쓰는 데이터 저장  │
   │  - TTL, eviction 관리 │
   └──────────┬───────────┘
              │ (C) Cache miss → DB 질의
              ▼
   ┌──────────────────────────────┐
   │      PostgreSQL Database     │
   │  - 영구 데이터 저장소            │
   │  - Alembic으로 버전 관리        │
   │  - Client 계정: SELECT 전용    │
   │  - Admin 계정: 모든 권한        │
   └──────────────────────────────┘
              ▲
              │
              │ (D) Admin 접근 (보안계정 / 로컬 or Render)
              │
   ┌──────────────────────────────┐
   │        Admin User            │
   │  - DB 관리(INSERT/UPDATE/...) │
   │  - Alembic migration 수행     │
   │  - Render 환경변수 통해 접근     │
   │  - .env 파일 git 추적 제외      │
   └──────────────────────────────┘

──────────────────────────────────────────────────────────────────────────────
💡 KEY NOTES
──────────────────────────────────────────────────────────────────────────────
• Frontend → FastAPI: 모든 요청은 API_KEY 필요 (보안 강화)
• FastAPI → Redis: 빠른 응답 제공, 캐시 miss 시 DB 질의
• Alembic: DB 스키마 버전 관리, 배포 시 자동 반영 가능
• .env & Render 환경변수: 민감정보(API_KEY, 비밀번호 등) 보호
• UptimeRobot: /health 엔드포인트 주기적 Ping → 서버 suspend 방지
• Admin 계정은 프론트 경로와 분리되어 있음 (보안 강화)
──────────────────────────────────────────────────────────────────────────────
