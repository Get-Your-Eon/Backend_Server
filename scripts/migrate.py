# scripts/migrate.py
import os
import subprocess
import sys
from datetime import datetime, timezone

def main():
    """Create an Alembic revision (autogenerated) and apply it to the DB.

    Usage: poetry run python scripts/migrate.py "revision message"
    """

    # Validate commit message argument
    if len(sys.argv) < 2:
        print("Usage: poetry run migrate 'revision message'")
        sys.exit(1)

    message = sys.argv[1]
    timestamp = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S")

    print(f"[{timestamp}] Starting Alembic migration run...\n")

    try:
        # 1. Create an autogenerate revision
        subprocess.run(
            ["poetry", "run", "alembic", "revision", "--autogenerate", "-m", message],
            check=True,
        )

        # 2. Apply the migration to the database
        subprocess.run(
            ["poetry", "run", "alembic", "upgrade", "head"],
            check=True,
        )

        print("\nMigration completed successfully")
    except subprocess.CalledProcessError as e:
        print(f"\nMigration failed: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
