"""Create station, charger, and api_log tables

Revision ID: 60afb71f58fe
Revises:
Create Date: 2025-10-05 17:43:12.671323

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# GeoAlchemy2 (PostGIS) 타입을 사용하기 위해 명시적으로 임포트합니다.
from geoalchemy2 import Geometry


# revision identifiers, used by Alembic.
revision: str = '60afb71f58fe'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_logs', # 테이블 이름 복수형으로 통일
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('endpoint', sa.String(), nullable=True),  # models.py 반영
                    sa.Column('method', sa.String(), nullable=True),  # models.py 반영
                    sa.Column('api_type', sa.String(length=50), nullable=True),
                    sa.Column('request_time', sa.DateTime(), nullable=False),
                    sa.Column('status_code', sa.Integer(), nullable=True),  # models.py 반영
                    sa.Column('response_code', sa.Integer(), nullable=True),
                    sa.Column('response_msg', sa.Text(), nullable=True),
                    sa.Column('response_time_ms', sa.Float(), nullable=True), # models.py 반영
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_logs'))
                    )
    op.create_index(op.f('ix_api_logs_id'), 'api_logs', ['id'], unique=False)

    op.create_table('stations', # 테이블 이름 복수형으로 통일
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False), # station_id -> id
                    sa.Column('station_code', sa.String(length=50), nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=False), # station_name -> name
                    sa.Column('address', sa.Text(), nullable=True),
                    # [핵심 수정] PostGIS Geometry 타입으로 변경
                    sa.Column('location', Geometry(geometry_type='POINT', srid=4326), nullable=True),
                    sa.Column('provider', sa.String(length=100), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_stations'))
                    )
    op.create_index(op.f('ix_stations_station_code'), 'stations', ['station_code'], unique=True)
    op.create_index(op.f('ix_stations_id'), 'stations', ['id'], unique=False)
    # [PostGIS] location 컬럼에 인덱스 추가 (GIST 인덱스가 자동으로 생성되도록 기대)
    op.create_index('idx_stations_location', 'stations', ['location'], unique=False, postgresql_using='gist')


    op.create_table('chargers', # 테이블 이름 복수형으로 통일
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False), # charger_id -> id
                    sa.Column('station_id', sa.Integer(), nullable=False),
                    sa.Column('charger_code', sa.String(length=50), nullable=True),
                    sa.Column('charger_type', sa.String(length=50), nullable=True),
                    sa.Column('output_kw', sa.Numeric(precision=5, scale=2), nullable=True),
                    sa.Column('connector_type', sa.String(length=50), nullable=True),
                    sa.Column('status_code', sa.Integer(), nullable=True), # models.py 반영
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['station_id'], ['stations.id'], name=op.f('fk_chargers_station_id_stations')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_chargers'))
                    )
    op.create_index(op.f('ix_chargers_id'), 'chargers', ['id'], unique=False)
    op.create_index(op.f('ix_chargers_station_id'), 'chargers', ['station_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chargers_station_id'), table_name='chargers')
    op.drop_index(op.f('ix_chargers_id'), table_name='chargers')
    op.drop_table('chargers')

    op.drop_index('idx_stations_location', table_name='stations', postgresql_using='gist')
    op.drop_index(op.f('ix_stations_id'), table_name='stations')
    op.drop_index(op.f('ix_stations_station_code'), table_name='stations')
    op.drop_table('stations')

    op.drop_index(op.f('ix_api_logs_id'), table_name='api_logs')
    op.drop_table('api_logs')
    # ### end Alembic commands ###