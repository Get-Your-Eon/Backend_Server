"""Create station, charger, and api_log tables

Revision ID: 60afb71f58fe
Revises:
Create Date: 2025-10-05 17:43:12.671323

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '60afb71f58fe'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_log',
                    sa.Column('log_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('api_type', sa.String(length=50), nullable=False),
                    sa.Column('request_time', sa.DateTime(), nullable=False),
                    sa.Column('response_code', sa.Integer(), nullable=True),
                    sa.Column('response_msg', sa.Text(), nullable=True),
                    sa.PrimaryKeyConstraint('log_id')
                    )
    op.create_index(op.f('ix_api_log_log_id'), 'api_log', ['log_id'], unique=False)
    op.create_table('station',
                    sa.Column('station_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('station_code', sa.String(length=50), nullable=False),
                    sa.Column('station_name', sa.String(length=200), nullable=False),
                    sa.Column('address', sa.Text(), nullable=True),
                    sa.Column('location', sa.String(length=50), nullable=True),
                    sa.Column('provider', sa.String(length=100), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('station_id')
                    )
    op.create_index(op.f('ix_station_station_code'), 'station', ['station_code'], unique=True)
    op.create_index(op.f('ix_station_station_id'), 'station', ['station_id'], unique=False)
    op.create_table('charger',
                    sa.Column('charger_id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('station_id', sa.Integer(), nullable=False),
                    sa.Column('charger_code', sa.String(length=50), nullable=True),
                    sa.Column('charger_type', sa.String(length=50), nullable=True),
                    sa.Column('output_kw', sa.Numeric(precision=5, scale=2), nullable=True),
                    sa.Column('connector_type', sa.String(length=50), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['station_id'], ['station.station_id'], ),
                    sa.PrimaryKeyConstraint('charger_id')
                    )
    op.create_index(op.f('ix_charger_charger_id'), 'charger', ['charger_id'], unique=False)
    op.create_index(op.f('ix_charger_station_id'), 'charger', ['station_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_charger_station_id'), table_name='charger')
    op.drop_index(op.f('ix_charger_charger_id'), table_name='charger')
    op.drop_table('charger')
    op.drop_index(op.f('ix_station_station_id'), table_name='station')
    op.drop_index(op.f('ix_station_station_code'), table_name='station')
    op.drop_table('station')
    op.drop_index(op.f('ix_api_log_log_id'), table_name='api_log')
    op.drop_table('api_log')
    # ### end Alembic commands ###