"""Check for pending changes

Revision ID: 9508604ce511
Revises: daa5cac943ac
Create Date: 2025-10-10 00:37:52.924565

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '9508604ce511'
down_revision: Union[str, Sequence[str], None] = 'daa5cac943ac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # The original auto-generated migration attempted to create tables that are
    # created earlier in the migration history on some branches. To make this
    # migration idempotent on a fresh DB and avoid DuplicateTableError during
    # alembic upgrade, skip creating these tables here. Other migrations will
    # create them where appropriate.
    op.execute("SELECT 1; -- skip duplicate table/index creation")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP INDEX IF EXISTS ix_chargers_station_id;")
    op.execute("DROP INDEX IF EXISTS ix_chargers_id;")
    op.drop_table('chargers')
    op.execute("DROP INDEX IF EXISTS ix_users_username;")
    op.execute("DROP INDEX IF EXISTS ix_users_role;")
    op.execute("DROP INDEX IF EXISTS ix_users_id;")
    op.drop_table('users')
    op.execute("DROP INDEX IF EXISTS ix_subsidies_model_group;")
    op.execute("DROP INDEX IF EXISTS ix_subsidies_manufacturer;")
    op.execute("DROP INDEX IF EXISTS ix_subsidies_id;")
    op.drop_table('subsidies')
    op.execute("DROP INDEX IF EXISTS ix_stations_station_code;")
    op.execute("DROP INDEX IF EXISTS ix_stations_location;")
    op.execute("DROP INDEX IF EXISTS ix_stations_id;")
    op.execute("DROP INDEX IF EXISTS idx_stations_location;")
    op.drop_table('stations')
    op.execute("DROP INDEX IF EXISTS ix_api_logs_id;")
    op.drop_table('api_logs')
    # ### end Alembic commands ###
