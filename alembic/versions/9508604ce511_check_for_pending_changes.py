"""Check for pending changes

Revision ID: 9508604ce511
Revises: daa5cac943ac
Create Date: 2025-10-10 00:37:52.924565

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9508604ce511'
down_revision: Union[str, Sequence[str], None] = 'daa5cac943ac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('api_type', sa.String(length=50), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('response_code', sa.Integer(), nullable=True),
    sa.Column('response_msg', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_logs_id'), 'api_logs', ['id'], unique=False)
    op.create_table('stations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('station_code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('provider', sa.String(length=100), nullable=True),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_stations_location', 'stations', ['location'], unique=False, postgresql_using='gist')
    op.create_index(op.f('ix_stations_id'), 'stations', ['id'], unique=False)
    op.create_index(op.f('ix_stations_location'), 'stations', ['location'], unique=False)
    op.create_index(op.f('ix_stations_station_code'), 'stations', ['station_code'], unique=True)
    op.create_table('subsidies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(), nullable=False),
    sa.Column('model_group', sa.String(), nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('subsidy_national_10k_won', sa.Integer(), nullable=False),
    sa.Column('subsidy_local_10k_won', sa.Integer(), nullable=False),
    sa.Column('subsidy_total_10k_won', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_name')
    )
    op.create_index(op.f('ix_subsidies_id'), 'subsidies', ['id'], unique=False)
    op.create_index(op.f('ix_subsidies_manufacturer'), 'subsidies', ['manufacturer'], unique=False)
    op.create_index(op.f('ix_subsidies_model_group'), 'subsidies', ['model_group'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('chargers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.Integer(), nullable=False),
    sa.Column('charger_code', sa.String(length=50), nullable=False),
    sa.Column('charger_type', sa.String(length=50), nullable=True),
    sa.Column('connector_type', sa.String(length=50), nullable=True),
    sa.Column('output_kw', sa.Float(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['station_id'], ['stations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('station_id', 'charger_code', name='_station_charger_uc')
    )
    op.create_index(op.f('ix_chargers_id'), 'chargers', ['id'], unique=False)
    op.create_index(op.f('ix_chargers_station_id'), 'chargers', ['station_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chargers_station_id'), table_name='chargers')
    op.drop_index(op.f('ix_chargers_id'), table_name='chargers')
    op.drop_table('chargers')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_subsidies_model_group'), table_name='subsidies')
    op.drop_index(op.f('ix_subsidies_manufacturer'), table_name='subsidies')
    op.drop_index(op.f('ix_subsidies_id'), table_name='subsidies')
    op.drop_table('subsidies')
    op.drop_index(op.f('ix_stations_station_code'), table_name='stations')
    op.drop_index(op.f('ix_stations_location'), table_name='stations')
    op.drop_index(op.f('ix_stations_id'), table_name='stations')
    op.drop_index('idx_stations_location', table_name='stations', postgresql_using='gist')
    op.drop_table('stations')
    op.drop_index(op.f('ix_api_logs_id'), table_name='api_logs')
    op.drop_table('api_logs')
    # ### end Alembic commands ###
