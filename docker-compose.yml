version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: ev_charger_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - ev_charger_network

  api:
    build: .
    container_name: ev_charger_api
    restart: always
    command: >
      sh -c "sleep 5 &&
             alembic upgrade head &&
             python init_db.py &&
             exec uvicorn app.main:app --host 0.0.0.0 --port 8000"
    env_file:
      - .env   # .env에서 REDIS_HOST와 DOCKER_ENV 모두 관리
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - ev_charger_network

  nginx:
    image: nginx:alpine
    container_name: ev_charger_nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - api
    networks:
      - ev_charger_network

  locust:
    image: locustio/locust:2.20.0
    container_name: ev_charger_locust
    restart: unless-stopped
    depends_on:
      - api
    volumes:
      - ./locustfile.py:/mnt/locust/locustfile.py:ro
    ports:
      - "8089:8089"
    environment:
      - LOCUST_HEALTH_PATH=/health
      - LOCUST_EXTRA_PATHS=/, /stations
    command: -f /mnt/locust/locustfile.py --host http://api:8000
    networks:
      - ev_charger_network

volumes:
  redis_data:
    driver: local

networks:
  ev_charger_network:
    driver: bridge
